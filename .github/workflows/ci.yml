name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        playwright install chromium
    
    - name: Lint with flake8
      run: |
        flake8 src/youtube_transcript_grabber --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/youtube_transcript_grabber --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check src/youtube_transcript_grabber
    
    - name: Sort imports check with isort
      run: |
        isort --check-only src/youtube_transcript_grabber
    
    - name: Type check with mypy
      run: |
        mypy src/youtube_transcript_grabber
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short
      env:
        HEADLESS: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install pip-audit
    
    - name: Security audit
      run: |
        pip-audit